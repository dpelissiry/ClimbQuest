$activeShadow: 0 0 10px rgba(var(--teal1), .5);

/* MIXINS */
@mixin focusOutline {outline: dotted 0px #CCC; outline-offset: .45rem;}
@mixin hideInput {width: 0; height: 0; position: absolute; left: -9999px;}
@mixin breakpoint($point) {
  @if $point == 1100 {
    @media (max-width: 1100px) { @content ; }
  }
  @else if $point == 800 {
    @media (max-width: 800px) { @content ; }
  }
}

.paging {
  margin-top: 40px;
  display: flex;
  flex-direction: row;
  justify-content: center;
  gap: 10px;

}

button {
  padding: 0;
  border: none;
  background: none;
  cursor: pointer;
}

.results-container{
    animation-name: result-animation;
    animation-duration: 1s;
    animation-fill-mode: forwards; /* Ensures the properties defined in the last keyframe persist after the animation ends */
    position: relative;
    z-index: 1;
    width: 90%; /* Slightly reduce width for padding */
    max-width: 1500px; /* Max width for larger screens */
    margin: auto; /* Center the content */
    margin-top: 1rem;
    background-color: rgba(255, 255, 255, 0.9); /* Semi-transparent background */
    border-radius: 8px; /* Rounded corners */
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.2); /* More prominent shadow for depth */
    padding: 10px;
    display: flex; /* Enables flexbox layout */
    justify-content: center; /* Center items horizontally */
    flex-direction: row; /* Stack items vertically */
    flex-wrap: wrap;
    align-items: stretch;
    gap: 30px
    
  }

  @keyframes result-animation {
    0% {
        background: rgba(255, 255, 255, 0);
        opacity: 0;
        transform: translateY(20px); /* Begin 20px down from the final position */
    }
    100% {
        background: rgba(255, 255, 255, 0.9); /* End with the semi-transparent background */
        opacity: 1; /* Fully visible */
        transform: translateY(0); /* End at the final vertical position */
    }
}

.nav-bar {
  margin: 1.5rem 0 1.5rem; box-sizing: border-box;
  font-size: 0;
  display: flex; flex-flow: row nowrap;
  justify-content: center; align-items: stretch;
  input {@include hideInput;}
  input + label {
    margin: 0; padding: .75rem 2rem; box-sizing: border-box;
    position: relative; display: inline-block;
    border: solid 1px #DDD; background-color: #FFF;
    font-size: .9rem; line-height: 140%; font-weight: 600; text-align: center;
    box-shadow: 0 0 0 rgba(255,255,255,0);
    transition:   border-color .15s ease-out, 
          color .25s ease-out, 
          background-color .15s ease-out,
          box-shadow .15s ease-out;
    
  }
  input:hover + label{border-color: var(--darkNavy);}
  input:checked + label {
    background-color: var(--teal2);
    color: #FFF;
    box-shadow: var(--activeShadow);
    border-color: var(--teal2);
    z-index: 1;
  }
  input:focus + label {@include focusOutline;}

  @include breakpoint(800) {
    input + label {
      padding: .75rem .25rem;
      flex: 0 0 50%;
      display: flex; justify-content: center; align-items: center;
    }
  }
}  

.form-control + .form-control {
  margin-top: 1em;
}

.left-button{
   border-radius: 6px 0 0 6px; 
   border-left: none;
}

.right-button{
    border-radius: 0 6px 6px 0; 
    border-right: none;
}